"""
Django settings for university_rating_system project.

Generated by 'django-admin startproject' using Django 4.1.7.

For more information on this file, see
https://docs.djangoproject.com/en/4.1/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/4.1/ref/settings/
"""

import os

from pathlib import Path

from django.utils.translation import gettext_lazy as _


# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent


# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/4.1/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = os.getenv('SECRET_KEY')

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = bool(os.getenv('DEBUG'))

ALLOWED_HOSTS = os.getenv('ALLOWED_HOSTS').split(' ')


# Application definition

INSTALLED_APPS = [
    'jazzmin',
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'rest_framework',
    'rest_framework.authtoken',
    'djoser',
    'drf_yasg',
    'corsheaders',
    'django_extensions',
    'apps.core.apps.CoreConfig',
    'apps.users.apps.UsersConfig',
    'apps.faculties.apps.FacultiesConfig',
    'apps.departments.apps.DepartmentsConfig',
    'apps.educators.apps.EducatorsConfig',
    'apps.rating.apps.RatingConfig',
    'apps.educator_rating.apps.EducatorRatingConfig',
]

MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
    'corsheaders.middleware.CorsMiddleware',
    'django.middleware.common.CommonMiddleware',
]

ROOT_URLCONF = 'university_rating_system.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = 'university_rating_system.wsgi.application'


# Database
# https://docs.djangoproject.com/en/4.1/ref/settings/#databases

DATABASES = {
    'default': {
        'ENGINE': os.getenv('DB_ENGINE'),
        'NAME': os.getenv('DB_NAME'),
        'USER': os.getenv('DB_USER'),
        'PASSWORD': os.getenv('DB_PASSWORD'),
        'HOST': os.getenv('DB_HOST'),
        'PORT': os.getenv('DB_PORT')
    }
}


# Password validation
# https://docs.djangoproject.com/en/4.1/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': ('django.contrib.auth.password_validation'
                 '.UserAttributeSimilarityValidator'),
    },
    {
        'NAME': ('django.contrib.auth.password_validation'
                 '.MinimumLengthValidator'),
    },
    {
        'NAME': ('django.contrib.auth.password_validation'
                 '.CommonPasswordValidator'),
    },
    {
        'NAME': ('django.contrib.auth.password_validation'
                 '.NumericPasswordValidator'),
    },
]


# Internationalization
# https://docs.djangoproject.com/en/4.1/topics/i18n/

LANGUAGE_CODE = 'ru'

TIME_ZONE = 'Europe/Moscow'

USE_I18N = True

USE_TZ = True

LOCALE_PATHS = [
    BASE_DIR / 'locale/'
]

# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/4.1/howto/static-files/

STATIC_URL = 'static/'

# Default primary key field type
# https://docs.djangoproject.com/en/4.1/ref/settings/#default-auto-field

DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'

# Custom models

AUTH_USER_MODEL = 'users.UserProfile'

# Rest framework

REST_FRAMEWORK = {
    'DEFAULT_PERMISSION_CLASSES': (
        'rest_framework.permissions.IsAuthenticated',
    ),
    'DEFAULT_AUTHENTICATION_CLASSES': (
        'rest_framework_simplejwt.authentication.JWTAuthentication',
        'rest_framework.authentication.TokenAuthentication',
        'rest_framework.authentication.SessionAuthentication',
        'rest_framework.authentication.BasicAuthentication',
    )
}

# Swagger

SWAGGER_SETTINGS = {
    'SECURITY_DEFINITIONS': {
        'Basic': {
            'type': 'basic'
        },
        'Token': {
            'type': 'apiKey',
            'name': 'Authorization',
            'in': 'header'
        }
    },
    'LOGIN_URL': 'rest_framework:login',
    'LOGOUT_URL': 'rest_framework:logout'
}

# Jazzmin (Admin site)

JAZZMIN_SETTINGS = {
    'site_logo': 'core/logo/VSTU-128-for-circle.png',
    'site_icon': 'core/logo/VSTU-32.png',
    'copyright': 'Volgograd State Technical University',
    'welcome_sign': _('API Administation'),
    'order_with_respect_to': [
        'users',
        'educators',
        'departments',
        'faculties',
        'rating',
        'educator_rating'
    ],
    'icons': {
        'departments.Department': 'fas fa-school',
        'departments.DepartmentType': 'fas fa-certificate',
        'educator_rating.EducatorIndicatorValue': 'fas fa-calculator',
        'educator_rating.EducatorRatingPartition': 'fas fa-star',
        'educator_rating.EducatorReportController': 'fas fa-eye',
        'educator_rating.EducatorReport': 'fas fa-file',
        'educators.Educator': 'fas fa-glasses',
        'educators.Qualification': 'fas fa-graduation-cap',
        'faculties.Faculty': 'fas fa-landmark',
        'rating.Criterion': 'fas fa-subscript',
        'rating.Indicator': 'fas fa-list',
        'rating.RatingPartition': 'fas fa-star',
        'rating.ValueType': 'fas fa-percent',
        'users.UserProfile': 'fas fa-user',
        'users.AllowedEmail': 'fas fa-at',
        'auth.Group': 'fas fa-users',
        'authtoken.TokenProxy': 'fas fa-key',
    },
}

JAZZMIN_UI_TWEAKS = {
    'navbar_fixed': True,
    'sidebar': 'sidebar-light-primary',
    'sidebar_fixed': True,
    'sidebar_nav_small_text': True,
    'theme': 'default',
}

# Mailing

EMAIL_BACKEND = 'django.core.mail.backends.smtp.EmailBackend'

EMAIL_HOST = os.getenv('EMAIL_HOST')

EMAIL_PORT = int(os.getenv('EMAIL_PORT'))

EMAIL_HOST_USER = os.getenv('EMAIL_HOST_USER')

EMAIL_HOST_PASSWORD = os.getenv('EMAIL_HOST_PASSWORD')

EMAIL_USE_TLS = bool(os.getenv('EMAIL_USE_TLS'))

# SimpleJWT

SIMPLE_JWT = {
   'AUTH_HEADER_TYPES': ('JWT', ),
}

# Djoser

DOMAIN = os.getenv('CLIENT_DOMAIN')

SITE_NAME = os.getenv('SITE_NAME')

DJOSER = {
    'LOGIN_FIELD': 'email',
    'SET_PASSWORD_RETYPE': True,
    'PASSWORD_RESET_CONFIRM_RETYPE': True,
    'USER_CREATE_PASSWORD_RETYPE': True,
    'SEND_CONFIRMATION_EMAIL': True,
    'SEND_ACTIVATION_EMAIL': True,
    'PASSWORD_CHANGED_EMAIL_CONFIRMATION': True,
    'ACTIVATION_URL': 'activate/{uid}/{token}',
    'PASSWORD_RESET_CONFIRM_URL': 'password-reset/confirm/{uid}/{token}',
    'SERIALIZERS': {
        'user': 'apps.users.serializers.UserProfileSerializer',
        'current_user': 'apps.users.serializers.UserProfileSerializer',
    }
}

# CORS

CORS_ALLOWED_ORIGINS = os.getenv('CORS_ALLOWED_ORIGINS').split(' ')

CSRF_TRUSTED_ORIGINS = os.getenv('CORS_ALLOWED_ORIGINS').split(' ')

CORS_ALLOW_CREDENTIALS = True
